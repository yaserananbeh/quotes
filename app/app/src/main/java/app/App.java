/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package app;

import com.google.gson.Gson;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.Map;


public class App {
//  The file path  "./app/src/main/resources/recentquotes.json"

    public static void main(String[] args) throws IOException {
        String apiuRL = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";

        try {
            URL url = new URL(apiuRL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 " +
                    "(KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connection.getResponseCode();

            if (status == 200) {
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line = bufferedReader.readLine();
                String oneQuet=line;
                while (line != null) {
                    System.out.println(line);
                    line = bufferedReader.readLine();
                    if (line!=null){
                        oneQuet+=line;
                    }
                }
                bufferedReader.close();
                FileWriter fileWriter=new FileWriter("newFile.json");
                fileWriter.write(oneQuet);
                fileWriter.close();
            } else {
                FileReader fileReader = new FileReader("./app/src/main/resources/recentquotes.json");
                Gson gson = new Gson();

                List<Map> list = gson.fromJson(fileReader, List.class);

                int floor = 0;
                int ceil = list.size() - 1;
                int randomIndex = (int) (Math.random() * (floor - ceil + 1) + ceil);

                Map Item = list.get(randomIndex);

                Quats quotes = new Quats(Item);
                System.out.println(quotes);
            }

            connection.disconnect();
        } catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }


    }
}
